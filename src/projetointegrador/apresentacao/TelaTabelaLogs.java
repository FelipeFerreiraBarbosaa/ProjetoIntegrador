/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package projetointegrador.apresentacao;

import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import projetointegrador.negocio.Logs;
import projetointegrador.negocio.Usuario;
import projetointegrador.persistencia.DaoGenerico;
import projetointegrador.persistencia.DataBaseException;
import projetointegrador.tableModel.LogsAuditsTableModel;
import projetointegrador.tableModel.UsuarioTableModel;

/**
 *
 * @author enzob
 */
public class TelaTabelaLogs extends javax.swing.JInternalFrame {

    /**
     * Creates new form TelaTabelaLogs
     */
    
    private Logs logSelecionado;
    
    public TelaTabelaLogs() throws DataBaseException {
        initComponents();
        carregarTabela("FROM Logs");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaLogs = new javax.swing.JTable();
        btAudit = new javax.swing.JButton();
        btLogs = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);

        tabelaLogs.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tabelaLogs);

        btAudit.setText("Audits");
        btAudit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAuditActionPerformed(evt);
            }
        });

        btLogs.setText("Logs");
        btLogs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btLogsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 483, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btLogs, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btAudit, javax.swing.GroupLayout.DEFAULT_SIZE, 117, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btLogs)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btAudit)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btLogsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btLogsActionPerformed
        try {
            carregarTabela("FROM Logs WHERE level='ERROR' or level='WARN' or level='FATAL'");
        } catch (DataBaseException ex) {
            Logger.getLogger(TelaTabelaLogs.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btLogsActionPerformed

    private void btAuditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAuditActionPerformed
        try {
            carregarTabela("FROM Logs WHERE level='INFO'");
        } catch (DataBaseException ex) {
            Logger.getLogger(TelaTabelaLogs.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btAuditActionPerformed

    public void carregarTabela(String sql) throws DataBaseException {
        
        //Método para carregar ou atualizar a tabela de usuarios        
        
        DaoGenerico dao = new DaoGenerico();
        List<Logs> lista = dao.read(Logs.class, sql);

        LogsAuditsTableModel tm = new LogsAuditsTableModel(lista);
        tabelaLogs.setModel(tm);

        //Códigos para permitir a seleção na tabela
        ListSelectionModel selectionModel = tabelaLogs.getSelectionModel();
        tabelaLogs.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        selectionModel.addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {

                int row = tabelaLogs.getSelectedRow();

                if (row >= 0) {
                    LogsAuditsTableModel tableModel = (LogsAuditsTableModel) tabelaLogs.getModel();
                    logSelecionado = tableModel.getListaLogs().get(tabelaLogs.getSelectedRow());
                }
            }
        });
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAudit;
    private javax.swing.JButton btLogs;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabelaLogs;
    // End of variables declaration//GEN-END:variables
}
