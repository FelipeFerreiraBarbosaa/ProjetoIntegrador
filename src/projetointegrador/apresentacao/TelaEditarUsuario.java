/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package projetointegrador.apresentacao;

import java.awt.Color;
import java.io.UnsupportedEncodingException;
import static java.lang.Integer.parseInt;
import java.security.NoSuchAlgorithmException;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.List;
import java.util.TimeZone;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import org.hibernate.HibernateException;
import org.hibernate.Session;
import org.hibernate.Transaction;
import projetointegrador.HibernateUtil;
import projetointegrador.negocio.CalendarFactory;
import projetointegrador.negocio.Cargos;
import projetointegrador.negocio.CriptografarSenha;
import projetointegrador.negocio.Usuario;
import projetointegrador.negocio.ValidacaoCpf;
import projetointegrador.persistencia.DaoGenerico;
import projetointegrador.persistencia.DataBaseException;
import projetointegrador.tableModel.UsuarioTableModel;
import projetointegrador.tableModel.UsuarioTableModel;

/**
 *
 * @author enzob
 */
public class TelaEditarUsuario extends javax.swing.JInternalFrame {

    static org.apache.log4j.Logger log = org.apache.log4j.Logger.getLogger(TelaLogin.class.getName());

    Calendar dataNascCalendar = Calendar.getInstance();
    Calendar dataNascCalendarEditar = Calendar.getInstance();
    
    private Usuario usuarioSelecionado;
    private Usuario atual;
    
    //Booleans para verificação
    
    Boolean isDateOk = false;
    Boolean doesPasswordsMatch = false;
    Boolean isCpfOk = false;
    
    Boolean isDateOkEditar = false;
    Boolean doesPasswordsMatchEditar = false;
    Boolean isCpfOkEditar = false;
    
    Color color;
    
    public TelaEditarUsuario (Usuario atual) throws DataBaseException {
        initComponents();        
        this.atual = atual;
        atualizarEditar();
        popularComboBox();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        jpEditar = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        cbSetorEditar = new javax.swing.JComboBox<>();
        btSalvar = new javax.swing.JButton();
        jtUsuarioEditar = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jtfDataNascEditar = new javax.swing.JFormattedTextField();
        jpfSenhaEditar = new javax.swing.JPasswordField();
        jLabel15 = new javax.swing.JLabel();
        jtFoneEditar = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jtEmailEditar = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jpfConfSenhaEditar = new javax.swing.JPasswordField();
        jtfCpfEditar = new javax.swing.JFormattedTextField();
        jtNomeEditar = new javax.swing.JTextField();

        setClosable(true);
        setIconifiable(true);

        jpEditar.setBackground(new java.awt.Color(255, 255, 255));
        jpEditar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel10.setText("Nome Completo:");

        cbSetorEditar.setModel(new javax.swing.DefaultComboBoxModel<>());

        btSalvar.setText("Salvar");
        btSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSalvarActionPerformed(evt);
            }
        });

        jtUsuarioEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtUsuarioEditarActionPerformed(evt);
            }
        });

        jLabel11.setText("Data de Nascimento:");

        jLabel12.setText("Setor:");

        jLabel13.setText("Senha:");

        jLabel14.setText("Telefone:");

        try {
            jtfDataNascEditar.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jtfDataNascEditar.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfDataNascEditarFocusLost(evt);
            }
        });

        jLabel15.setText("E-mail:");

        jLabel16.setText("Confirmar Senha:");

        jLabel17.setText("CPF:");

        jLabel18.setText("Usuário:");

        jpfConfSenhaEditar.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jpfConfSenhaEditarFocusLost(evt);
            }
        });

        try {
            jtfCpfEditar.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jtfCpfEditar.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfCpfEditarFocusLost(evt);
            }
        });

        javax.swing.GroupLayout jpEditarLayout = new javax.swing.GroupLayout(jpEditar);
        jpEditar.setLayout(jpEditarLayout);
        jpEditarLayout.setHorizontalGroup(
            jpEditarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpEditarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpEditarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpEditarLayout.createSequentialGroup()
                        .addGroup(jpEditarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel17)
                            .addComponent(jLabel14)
                            .addComponent(jLabel15)
                            .addComponent(jLabel11)
                            .addComponent(jLabel13)
                            .addComponent(jLabel16)
                            .addComponent(jLabel12)
                            .addComponent(jLabel10)
                            .addComponent(jLabel18))
                        .addGap(18, 18, 18)
                        .addGroup(jpEditarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtfDataNascEditar)
                            .addComponent(jtEmailEditar)
                            .addComponent(jtNomeEditar)
                            .addComponent(jtUsuarioEditar)
                            .addComponent(jtFoneEditar)
                            .addComponent(jtfCpfEditar, javax.swing.GroupLayout.DEFAULT_SIZE, 234, Short.MAX_VALUE)
                            .addComponent(jpfSenhaEditar)
                            .addComponent(jpfConfSenhaEditar)
                            .addComponent(cbSetorEditar, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpEditarLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jpEditarLayout.setVerticalGroup(
            jpEditarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpEditarLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jpEditarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtUsuarioEditar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jpEditarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jtNomeEditar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jpEditarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jtfDataNascEditar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jpEditarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(jtEmailEditar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jpEditarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(jtFoneEditar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jpEditarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(jtfCpfEditar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jpEditarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(jpfSenhaEditar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jpEditarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(jpfConfSenhaEditar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jpEditarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbSetorEditar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addGap(26, 26, 26)
                .addComponent(btSalvar)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 394, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jpEditar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 448, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jpEditar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSalvarActionPerformed

        DaoGenerico dao = new DaoGenerico();
        Usuario novo = atual;
        if (isDateOkEditar == true && doesPasswordsMatchEditar == true && isCpfOkEditar == true) {

            novo.setUsuario(jtUsuarioEditar.getText());
            novo.setNomeCompleto(jtNomeEditar.getText());
            novo.setDataNasc(dataNascCalendarEditar);
            novo.setEmail(jtEmailEditar.getText());
            novo.setCpf(jtfCpfEditar.getText());
            //Caso senha não for vazio, criptografa a nova e atualiza
            
            if (!jpfSenhaEditar.getText().equals("")) {
                
                CriptografarSenha cripto = new CriptografarSenha();
                String newSenha = "";
                try {
                    newSenha = cripto.cripto(jpfSenhaEditar.getText());
                } catch (NoSuchAlgorithmException ex) {
                    Logger.getLogger(TelaCadastroUsuarios.class.getName()).log(Level.SEVERE, null, ex);
                } catch (UnsupportedEncodingException ex) {
                    Logger.getLogger(TelaCadastroUsuarios.class.getName()).log(Level.SEVERE, null, ex);
                }
                
                novo.setSenha(newSenha);
            }
            //dao.edit(novo, "FROM Usuario WHERE usuario='"+atual.getUsuario()+"'");
            dao.editar(novo);
            System.out.println("chegou // " + novo.getNomeCompleto());
            ;
        }

    }//GEN-LAST:event_btSalvarActionPerformed

    private void jtUsuarioEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtUsuarioEditarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtUsuarioEditarActionPerformed

    private void jtfDataNascEditarFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfDataNascEditarFocusLost

        //Função para obrigar a data do calendário ser válida

        dataNascCalendarEditar.setLenient(false);

        try {

            //Funções para transformar a String digitada em valores INT para o objeto Calendar

            CalendarFactory cf = new CalendarFactory();
            int[] dmy = cf.StringToDayMonthYear(jtfDataNascEditar.getText());

            //Verifica se o ano é maior que o ano atual

            if (dmy[2] > Calendar.getInstance(TimeZone.getTimeZone("Brazil/West")).get(Calendar.YEAR)) {
                throw new Exception();
            }

            //Setando o objeto calendar e verificando, caso ocorra um erro a caixa ficará vermelha e o boolean continuara falso

            dataNascCalendarEditar.set(dmy[2], dmy[1], dmy[0], 00, 00, 00);
            jtfDataNascEditar.setBackground(Color.white);
            isDateOkEditar = true;
            log.info("Data digitada está de acordo");

        } catch (Exception Ex) {

            //Muda a cor do textField caso algo de errado

            jtfDataNascEditar.setBackground(color = new Color(255, 143, 112));
            JOptionPane.showMessageDialog(null, "A data digitada é inválida");
            isDateOkEditar = false;
            log.warn("Data digitada é inválida");
        }

    }//GEN-LAST:event_jtfDataNascEditarFocusLost

    private void jpfConfSenhaEditarFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jpfConfSenhaEditarFocusLost

        //Esquema para verificar se as senhas coincidem

        try {
            if (!jpfSenhaEditar.getText().equals(jpfConfSenhaEditar.getText())) {
                throw new Exception();
            }

            jpfConfSenhaEditar.setBackground (Color.white);
            doesPasswordsMatchEditar = true;

        } catch (Exception ex) {
            jpfConfSenhaEditar.setBackground(color = new Color(255, 143, 112));
            JOptionPane.showMessageDialog(null, "As senhas não coincidem");
            doesPasswordsMatchEditar = false;
            log.warn("Senhas digitadas não são iguais");
        }

    }//GEN-LAST:event_jpfConfSenhaEditarFocusLost

    private void jtfCpfEditarFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfCpfEditarFocusLost

        //Esquema para verificar se o CPF é válido pelos padrões brasileiros

        try {
            boolean cpfValido = ValidacaoCpf.validarCPF(jtfCpfEditar.getText().replaceAll("[^0-9]",""));

            if (cpfValido == false) {
                throw new Exception();
            }

            jtfCpfEditar.setBackground(color.white);
            isCpfOkEditar = true;
            log.info("CPF válido");

        } catch (Exception ex) {
            jtfCpfEditar.setBackground(color = new Color(255, 143, 112));
            JOptionPane.showMessageDialog(null, "O CPF digitado é inválido");
            isCpfOkEditar = false;
            log.warn("CPF inválido");
        }

    }//GEN-LAST:event_jtfCpfEditarFocusLost

    public void atualizarEditar () {
        
        //Define os campos da tela de Editar com os dados do usuário logado
        
        jtUsuarioEditar.setText(atual.getUsuario());
        jtNomeEditar.setText(atual.getNomeCompleto());
        
        //Algoritmo para acertar o dia e mes
        CalendarFactory cl = new CalendarFactory();
        String data = cl.CalendarToString(atual.getDataNasc());
        
        jtfDataNascEditar.setText(data);
        jtEmailEditar.setText(atual.getEmail());
        jtFoneEditar.setText(atual.getFone());
        jtfCpfEditar.setText(atual.getCpf());
        
    }
    
    public void popularComboBox () {
        
        
        cbSetorEditar.removeAllItems();
        
        DaoGenerico dao = new DaoGenerico();
        List<Cargos> lista = new ArrayList();
        lista = dao.read(Cargos.class, "FROM Cargos");
        
        /*DefaultComboBoxModel model = new DefaultComboBoxModel(lista);
        cbSetor.setModel(model);*/
        
        for (int i = 0; i < lista.size(); i++) {
            
            cbSetorEditar.addItem(lista.get(i));
        }
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btSalvar;
    private javax.swing.JComboBox<Cargos> cbSetorEditar;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JPanel jpEditar;
    private javax.swing.JPasswordField jpfConfSenhaEditar;
    private javax.swing.JPasswordField jpfSenhaEditar;
    private javax.swing.JTextField jtEmailEditar;
    private javax.swing.JTextField jtFoneEditar;
    private javax.swing.JTextField jtNomeEditar;
    private javax.swing.JTextField jtUsuarioEditar;
    private javax.swing.JFormattedTextField jtfCpfEditar;
    private javax.swing.JFormattedTextField jtfDataNascEditar;
    // End of variables declaration//GEN-END:variables
}
